name: Auto Conventional Commit

on:
  workflow_dispatch:  # ejecutas manualmente desde GitHub

jobs:
  auto_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0  # Necesario para obtener historia completa

      - name: Configurar Git
        run: |
          git config user.name "Commit Bot"
          git config user.email "ariel5253@misena.edu.co"

      - name: Detectar cambios
        id: check_changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Obtener diff
        if: steps.check_changes.outputs.has_changes == 'true'
        id: diff
        run: |
          DIFF=$(git diff --cached -- . ':!*.md' ':!*.txt')
          DIFF="${DIFF//'%'/'%25'}"
          DIFF="${DIFF//$'\n'/'%0A'}"
          DIFF="${DIFF//$'\r'/'%0D'}"
          echo "diff=$DIFF" >> $GITHUB_OUTPUT

      - name: Generar mensaje con OpenAI
        if: steps.check_changes.outputs.has_changes == 'true'
        id: ai_commit
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
        run: |
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {
                  "role": "system",
                  "content": "Eres un experto en Conventional Commits. Genera un mensaje de commit tipo feat:, fix:, chore:, docs:, etc., basado en el siguiente git diff. Solo responde con el mensaje, sin explicaciones."
                },
                {
                  "role": "user",
                  "content": "'"${{ steps.diff.outputs.diff }}"'"
                }
              ]
            }' | jq -r '.choices[0].message.content')

          echo "message=$RESPONSE" >> $GITHUB_OUTPUT

      - name: Commit y push autom√°tico
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "${{ steps.ai_commit.outputs.message }}"
          git push origin main
